// frontend/components/PrintOrder.js
import { useRef } from 'react';

export const PrintOrder = ({ order }) => {
  const printRef = useRef();

  const handlePrint = () => {
    const printContent = printRef.current;
    const popup = window.open('', '_blank', 'width=600,height=600');
    popup.document.write(`
      <html>
        <head>
          <title>–ó–∞–∫–∞–∑ ‚Ññ${order.id}</title>
          <style>
            body { font-family: Arial; padding: 20px; }
            .header { text-align: center; border-bottom: 2px solid #000; padding-bottom: 10px; }
            .section { margin: 15px 0; }
            table { width: 100%; border-collapse: collapse; }
            td, th { border: 1px solid #ddd; padding: 8px; }
          </style>
        </head>
        <body onload="window.print()">
          <div class="header">
            <h2>–ó–∞–∫–∞–∑ ‚Ññ${order.id}</h2>
            <p>${new Date(order.created_at).toLocaleString()}</p>
          </div>

          <div class="section">
            <strong>–°—Ç–∞—Ç—É—Å:</strong> ${getStatusLabel(order.status)}
          </div>

          <div class="section">
            <strong>–î–æ—Å—Ç–∞–≤–∫–∞:</strong> ${order.delivery_date} –≤ ${order.delivery_time}
          </div>

          <div class="section">
            <strong>–ê–¥—Ä–µ—Å:</strong> ${order.delivery_address}
          </div>

          <table>
            <thead><tr><th>–¢–æ–≤–∞—Ä</th><th>–ö–æ–ª-–≤–æ</th><th>–¶–µ–Ω–∞</th></tr></thead>
            <tbody>
              ${order.items.map(item => `
                <tr>
                  <td>${item.product} (${item.weight})</td>
                  <td>${item.quantity}</td>
                  <td>${item.price} ‚ÇΩ</td>
                </tr>
              `).join('')}
            </tbody>
          </table>

          <div class="section">
            <strong>–ò—Ç–æ–≥–æ:</strong> ${order.total_price} ‚ÇΩ
          </div>
        </body>
      </html>
    `);
    popup.document.close();
  };

  return (
    <button onClick={handlePrint} className="print-btn">üñ®Ô∏è –†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å</button>
  );
};

function getStatusLabel(status) {
  return {
    new: '–ù–æ–≤—ã–π',
    preparing: '–ì–æ—Ç–æ–≤–∏—Ç—Å—è',
    ready: '–ì–æ—Ç–æ–≤',
    delivered: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
    cancelled: '–û—Ç–º–µ–Ω—ë–Ω'
  }[status] || status;
}
